#:kivy 2.1.0
#:import Calendar calendar.Calendar
#:import Factory kivy.factory.Factory

#Dropdown valikkojen väriteema-asioita
<CustomSpinnerOptions@SpinnerOption>:
    background_color:255/155, 255/255, 0/255,1
    color: 0,0,0,1

# on olemassa myPopUp, joka on Popup -tyyppinen hässäkkä
<myPopUp@Popup>:
    # Merkinnän tekoa varten oma kivyn popup -luokka
    auto_dissmiss:False
    title:"Tee merkintä"
    title_align:"center"
    title_color:(0, 0, 0, 1)
    size_hint: 0.8,0.8
    pos_hint:{"x":0.1,"top":0.9}
    background:"images/tausta-lehdet.png"

    #rakennellaan MyPopUpiin sisältö layoutin sisään
    FloatLayout:
        TextInput:
            size_hint:1,0.8
            pos_hint:{"x":0,"top":1}

        Button:
            text:"Tallenna"
            size_hint: 1,0.2
            pos_hint:{"x":0,"top":0.19}
            color:(0, 0, 0, 1)
            background_color: 232/255,123/255,0/255,0.10
            # tämän pitäisi kutsua jotenkin tee_merkinta(pvm, kk, vv) funktiota parametreineen
            on_release:root.dismiss()

#Container kuori päivyriä ja taustakuvaa varten
<DatePickerContainer>:
    FloatLayout:
        Image:
            source: "images/tausta-lehdet.png"
            allow_stretch:True
            keep_ratio:False

        # Laibel missä tänään on ..
    	MDLabel:
		    id: aika
		    text: "Tänään on:"
            text_color:0,0,0,1
            pos_hint:{"x":0,"top":0.55}
        
        # Labeliin tämänhetkinen aika
        MDLabel:
		    id: aika_nyt
            pos_hint:{"x":0.23,"top":0.55}
		    text: app.date
            
        #Päivyri siihen containeriin
        DatePicker:


<Day@Button>:
    # Päivämäärien nappulat
    datepicker: self.parent.datepicker
    #merkinta2: str(Factory.DatePicker().onko_merkinta())
    merkintalista: ["10","20","30"] # Tämä pitäisi olla lista databasessa olevista päivämääristä, jossa on merkintä
    background_color: (128, 128, 0, 1) if self.text in self.merkintalista else (232/255,123/255,0/255,0.10)
    text_color:(0, 0, 0, 1)
    #background_color: 232/255,123/255,0/255,0.10
    disabled: True if self.text == "" else False
    
    on_release:
        root.datepicker.picked = [int(self.text), root.datepicker.month, root.datepicker.year]
        root.datepicker.tee_merkinta(root.datepicker.picked)
        Factory.myPopUp().open()


<Week@BoxLayout>:
    datepicker: root.parent
    weekdays: ["","","","","","",""]
    Day:
        text: str(root.weekdays[0])
        color:(0, 0, 0, 1)
    Day:
        text: str(root.weekdays[1])
        color:(0, 0, 0, 1)
    Day:
        text: str(root.weekdays[2])
        color:(0, 0, 0, 1)
    Day:
        text: str(root.weekdays[3])
        color:(0, 0, 0, 1)
    Day:
        text: str(root.weekdays[4])
        color:(0, 0, 0, 1)
    Day:
        text: str(root.weekdays[5])
        color:(0, 0, 0, 1)
    Day:
        text: str(root.weekdays[6])
        color:(0, 0, 0, 1)

<WeekDays@BoxLayout>:
    Label:
        text: "Ma"
        color:(0, 0, 0, 1)
    Label:
        text: "Ti"
        color:(0, 0, 0, 1)    
    Label:
        text: "Ke"
        color:(0, 0, 0, 1)
    Label:
        text: "To"
        color:(0, 0, 0, 1)
    Label:
        text: "Pe"
        color:(0, 0, 0, 1)
    Label:
        text: "La"
        color:(0, 0, 0, 1)
    Label:
        text: "Su"
        color:(0, 0, 0, 1)

<NavBar@BoxLayout>:
    datepicker:self.parent
    Spinner:
        option_cls: Factory.CustomSpinnerOptions
        values: root.datepicker.months
        text: root.datepicker.months[root.datepicker.month-1]
        color:(0, 0, 0, 1)
        background_color: 232/255,123/255,0/255,0.10
        on_text:
            root.datepicker.month = root.datepicker.months.index(self.text)+1
            
    Spinner:
        option_cls: Factory.CustomSpinnerOptions
        values: [str(i) for i in range(2020,2031)]
        text: str(root.datepicker.year)
        color:(0, 0, 0, 1)
        background_color: 232/255,123/255,0/255,0.10
        on_text:
            root.datepicker.year = int(self.text)
    Widget:
    Button:
        text: "<"
        color:(0, 0, 0, 1)
        background_color: 232/255,123/255,0/255,0.10
        on_release:
            if root.datepicker.month == 1 and spin.text == "Kuukausi": root.datepicker.year -= 1
            if spin.text == "Kuukausi": root.datepicker.month = 12 if root.datepicker.month == 1 else root.datepicker.month - 1
            if spin.text == "Vuosi": root.datepicker.year -= 1
    Spinner:
        option_cls: Factory.CustomSpinnerOptions
        id: spin
        values: ["Kuukausi","Vuosi"]
        text: "Kuukausi"
        color:(0, 0, 0, 1)
        background_color: 232/255,123/255,0/255,0.10

    Button:
        text: ">"
        color:(0, 0, 0, 1)
        background_color: 232/255,123/255,0/255,0.10
        
        on_release:
            if root.datepicker.month == 12 and spin.text == "Kuukausi": root.datepicker.year += 1
            if spin.text == "Kuukausi": root.datepicker.month = 1 if root.datepicker.month == 12 else root.datepicker.month + 1
            if spin.text == "Vuosi": root.datepicker.year += 1

<DatePicker@BoxLayout>:
    id: deitpikker
    year: 2023
    month: 8
    picked: ["","",""]
    months: ["Tammi", "Helmi", "Maalis", "Huhti", "Touko", "Kesä", "Heinä", "Elo", "Syys", "Loka", "Marras", "Joulu"]
    calendar: Calendar()
    days: [(i if i > 0 else "") for i in self.calendar.itermonthdays(self.year, self.month)] + [""] * 14
    orientation: "vertical"
    NavBar:
    WeekDays:
    Week:
        weekdays: root.days[0:7]
    Week:
        weekdays: root.days[7:14]
    Week:
        weekdays: root.days[14:21]
    Week:
        weekdays: root.days[21:28]
    Week:
        weekdays: root.days[28:35]
    Week:
        weekdays: root.days[35:]
    Label:
        text: "" if root.picked == ["","",""] else "{}/{}-{}".format(root.picked[0], root.picked[1], root.picked[2])
        color:(0, 0, 0, 1)
        background_color: 232/255,123/255,0/255,0.10
        

